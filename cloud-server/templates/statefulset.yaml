apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cloud-server.fullname" . }}
  labels:
    {{- include "cloud-server.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "cloud-server.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "cloud-server.fullname" . }}
  replicas: 1
  minReadySeconds: 0
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cloud-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cloud-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      terminationGracePeriodSeconds: 10
      volumes:
        - name: sshsecret
          secret:
            secretName: {{ include "cloud-server.fullname" . }}
            defaultMode: 0400
        - name: sshconfig
          configMap:
            name: {{ include "cloud-server.fullname" . }}-ssh
            defaultMode: 0444
        - name: config
          configMap:
            name: {{ include "cloud-server.fullname" . }}
            defaultMode: 0500
      containers:
        - name: {{ .Chart.Name }}
          tty: true
          stdin: true
          {{- if not .Values.securityContext.privileged }}
          command: ["/usr/bin/bash"]
          args: ["-c", "mkdir /run/sshd; /etc/rc.local; touch /ready; exec /usr/sbin/sshd -e -D"]
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: container
              value: other
          volumeMounts:
            - name: sshsecret
              mountPath: "/etc/ssh/ca/ca_key"
              subPath: "ca_key"
            - name: sshconfig
              mountPath: "/etc/ssh/ca/ca_key.pub"
              subPath: "ca_key.pub"
            - name: sshconfig
              mountPath: "/etc/ssh/sshd_config"
              subPath: "sshd_config"
            - name: config
              mountPath: "/etc/rc.local"
              subPath: "rc.local"
            - name: config
              mountPath: "/etc/rc.env"
              subPath: "rc.env"
            - name: {{ include "cloud-server.fullname" . }}-home
              mountPath: "/home"
          ports:
            - containerPort: 22
          livenessProbe:
            tcpSocket:
              port: 22
            failureThreshold: 2
            periodSeconds: 60
          readinessProbe:
            exec:
              command:
              - cat
              - /ready
            initialDelaySeconds: 30
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "cloud-server.fullname" . }}-home
        labels:
          {{- include "cloud-server.labels" . | nindent 10 }}
        annotations:
          helm.sh/resource-policy: "keep"
      spec:
        accessModes:
          - ReadWriteOnce
        volumeMode: Filesystem
        resources:
          requests:
            storage: {{ .Values.homeSize }}
        {{- if hasKey .Values "homeStorageClassName" }}
        storageClassName: {{ .Values.homeStorageClassName }}
        {{- end }}
